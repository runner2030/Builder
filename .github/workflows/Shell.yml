name: Shell
run-name: ${{inputs.package}}

on:
  workflow_dispatch:
    inputs:
      package:
        description: "Package"
        required: true
        
concurrency:
 group: ${{github.workflow}}-${{inputs.package}}
 cancel-in-progress: true

jobs:
    
  Build:
    name: ${{inputs.package}} (${{matrix.arch}})
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        arch: [aarch64, arm, i686, x86_64]
      fail-fast: false
    env:
      ALSULTAN_API: ${{secrets.ALSULTAN_API}}

    steps:
  
    - name: Source
      run: |
        # Downloading Shell Sources
        curl -Lks "https://alsultan.vip/Service/Vendors/GitHub/Services?API=${{env.ALSULTAN_API}}&Service=StageSource&Project=Shell" > src.zip
        unzip -qq src.zip || true
        rm src.zip

    - name: Clean
      run: |
        # Cleaning Ubuntu Runner
        chmod -R 777 .
        ./Scripts/Build/SetUp/UbuntuClean.sh
        
    - name: Prepare
      run: |
        # Preparing Ubuntu Runner        
        ./Scripts/Build/SetUp/UbuntuSetUp.sh
        
    - name: Build
      id: build
      run: |
        # Building Shell Package
        ./Scripts/Build/SetUp/UbuntuBuild.sh ${{matrix.arch}} ${{github.event.inputs.package}}

    - name: Upload
      if: ${{steps.build.outputs.skip-upload != 'true' }}
      run: |
        # Uploading Compiled Debians
        UPLOADER='https://alsultan.vip/Service/Vendors/GitHub/Services?API=${{env.ALSULTAN_API}}&Service=upload-multi&dir=D:\Programs\Private\Sources\Shell\Compiled\DEBS\_NEW_\GitHub'
        UPLOADED=0
        for f in $(find ${{github.workspace}}/Compiled -name *.deb); do
          echo
          echo "Uploading: ${f}"
          curl -s -F FileName=@"${f}" "${UPLOADER}"
          UPLOADED=1
          echo
        done
        rm -rf ${{github.workspace}} 2> /dev/null || true
        test $UPLOADED = 0 && exit 333 || true

