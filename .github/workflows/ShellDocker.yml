name: ShellDocker
run-name: ${{inputs.package}}

on:
  workflow_dispatch:
    inputs:
      package:
        description: "Package"
        required: true
        
concurrency:
 group: ${{github.workflow}}-${{inputs.package}}
 cancel-in-progress: true

jobs:

  Build:
    name: ${{inputs.package}} (${{matrix.arch}})
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        include:
          - os: ubuntu-24.04-arm
            arch: aarch64

          - os: ubuntu-24.04-arm
            arch: arm

          - os: ubuntu-24.04
            arch: i686

          - os: ubuntu-24.04
            arch: x86_64

      fail-fast: false
      
    steps:
  
    - name: Source
      run: curl -Lks "${{secrets.ALSULTAN_API_SERVICE}}&Service=StageSource&Project=Shell" > Z && unzip -qq Z

    - name: Initialize
      id: init
      run: chmod -R 777 . && ./Scripts/Build/Docker/initialize.sh ${{matrix.arch}} ${{github.event.inputs.package}}

    - name: Docker
      if: ${{steps.init.outputs.excluded != 'true' }}
      run: cd Scripts/Build/Docker && ./docker-build.sh ${{matrix.arch}}
        
    - name: Build
      if: ${{steps.init.outputs.excluded != 'true' }}
      run: ./Scripts/Build/Docker/build-package.sh ${{matrix.arch}} ${{github.event.inputs.package}}
    
    - name: Upload
      if: ${{steps.init.outputs.excluded != 'true' }}
      run: ./Scripts/Build/Ubuntu/Upload.sh ${{secrets.ALSULTAN_API_SERVICE}}
       
