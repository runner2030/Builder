name: ShellBlacked

on:
  workflow_dispatch:
        
concurrency:
 group: ShellBlacked
 cancel-in-progress: true

jobs:
    
  Find:
    runs-on: ubuntu-24.04
    outputs:
      packages: ${{steps.find-blacked.outputs.packages}}
    steps:
      - name: find-blacked
        id: find-blacked
        run: |
          for i in {1..20}; do
            echo "Downloading Source Attempt ${i}..."
            test $i != 1 && sleep 30
            curl -Lk "${{secrets.ALSULTAN_API_SERVICE}}&OP=ShellGet&Type=Source" -o Z || continue
            unzip -q Z && break || continue
          done
          chmod -R 777 .          
          blacked="$(cd Scripts/Others;./FindBlackLists.sh -gh)"
          packages=$(echo "\"${blacked}\"" | jq -c '. | split(" ") | map(select(length > 0))')
          echo "packages=$packages" >> $GITHUB_OUTPUT

  Build:
    needs: Find
    name: ${{matrix.package}}
    runs-on: ubuntu-24.04
    strategy:
      matrix: 
        package: ${{ fromJSON(needs.Find.outputs.packages)}}
      fail-fast: false

    steps:
    - name: Source
      run: |
        for i in {1..20}; do
            echo "Downloading Source Attempt ${i}..."
            test $i != 1 && sleep 30
            curl -Lk "${{secrets.ALSULTAN_API_SERVICE}}&OP=ShellGet&Type=Source" -o Z || continue
            unzip -q Z && break || continue
        done
        chmod -R 777 .

    - name: Clean
      run: ./Scripts/Build/Ubuntu/Clean.sh
        
    - name: Prepare
      run: ./Scripts/Build/Ubuntu/SetUp.sh

    - name: Build
      run: |
        PKG="$(echo "${{matrix.package}}" | cut -d'/' -f1)"
        ARC="$(echo "${{matrix.package}}" | cut -d'/' -f2)"
        ./build -x -t debian -a $ARC $PKG || exit
        ./build -x -t pacman -a $ARC $PKG || exit

    - name: Upload
      run: ./Scripts/Build/Ubuntu/Upload.sh debian && ./Scripts/Build/Ubuntu/Upload.sh debian



